#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""setup_git

always having to setup my git config is getting on my tits.
"""

import argparse
import sys
import os
import io
import ConfigParser
import pprint

__author__ = "John van Zantvoort"
__email__ = "John@vanZantvoort.org"
__license__ = "MIT"
__version__ = "0.1"

configfile = os.path.expanduser('~/.gitconfig')

def setopt(data, section, option, optvalue):
    data[section] = data.get(section, {})
    data[section][option] = data[section].get(option, optvalue)
    return data

def readconfig():
    retv = {}

    if os.path.exists(configfile):
        cfgtxt = "".join([x.lstrip() for x in open(configfile).readlines()])
        config = ConfigParser.RawConfigParser()
        config.readfp(io.BytesIO(cfgtxt))
        for section in config.sections():
            for option in config.options(section):
                retv = setopt(retv, section, option, config.get(section, option))

    lg  = """log --graph --pretty=format:'%Cred%h%Creset """
    lg += """-%C(yellow)%d%Creset %s %Cgreen(%cr) """
    lg += """%C(bold blue)<%an>%Creset' --abbrev-commit """
    lg += '--date=relative'

    retv = setopt(retv, 'color', 'ui', 'true')
    retv = setopt(retv, 'color "branch"', 'current', 'yellow reverse')
    retv = setopt(retv, 'color "branch"', 'local', 'yellow')
    retv = setopt(retv, 'color "branch"', 'remote', 'green')
    retv = setopt(retv, 'color "diff"', 'frag', 'magenta bold')
    retv = setopt(retv, 'color "diff"', 'meta', 'yellow bold')
    retv = setopt(retv, 'color "diff"', 'new', 'green bold')
    retv = setopt(retv, 'color "diff"', 'old', 'red bold')
    retv = setopt(retv, 'color "status"', 'added', 'yellow')
    retv = setopt(retv, 'color "status"', 'changed', 'green')
    retv = setopt(retv, 'color "status"', 'untracked', 'red')
    retv = setopt(retv, 'core', 'editor', 'vim')
    retv = setopt(retv, 'diff', 'tool', 'vimdiff')
    retv = setopt(retv, 'difftool', 'prompt', 'false')
    retv = setopt(retv, 'merge', 'tool', 'vimdiff')
    retv = setopt(retv, 'alias', 'br', 'branch -av')
    retv = setopt(retv, 'alias', 'brname', """!git branch | grep "^*" | awk '{ print $2 }'""")
    retv = setopt(retv, 'alias', 'ci', 'commit')
    retv = setopt(retv, 'alias', 'co', 'checkout')
    retv = setopt(retv, 'alias', 'd', 'difftool')
    retv = setopt(retv, 'alias', 'sr', 'diff remotes/origin/master..origin/master')
    retv = setopt(retv, 'alias', 'st', 'status -s')
    retv = setopt(retv, 'alias', 'lg', lg)
    return retv

def writeconfig(configdata):
    legend = ['user', 'color', 'color "branch"', 'color "diff"',
              'color "status"', 'core', 'diff', 'difftool', 'merge', 'alias']

    sectionlist = list()
    for section in legend:
        if section in configdata:
            sectionlist.append(section)

    for section in configdata.keys():
        if section not in legend:
            sectionlist.append(section)

    ofh = open(configfile, "wb")

    for section in sectionlist:
        options = configdata[section]
        optionlist = sorted(options.keys())

        ofh.write("[%s]\n" % section)
        for option in optionlist:
            optionvalue = options.get(option, "")
            ofh.write("\t%s = %s\n" % (option, optionvalue))
        ofh.write("\n")

    ofh.close()

def main(args):
    configdata = readconfig()
    writeconfig(configdata)

if __name__ == "__main__":
    main(sys.argv[1:])
